Subject: [PATCH] Disable eLinux precaching
---
Index: flutter-elinux/lib/commands/precache.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/flutter-elinux/lib/commands/precache.dart b/flutter-elinux/lib/commands/precache.dart
--- a/flutter-elinux/lib/commands/precache.dart	(revision cbc86f6e71e26f20e0f823549d81e1f3cf4a26ae)
+++ b/flutter-elinux/lib/commands/precache.dart	(date 1741947718982)
@@ -3,12 +3,7 @@
 // Use of this source code is governed by a BSD-style license that can be
 // found in the LICENSE file.

-import 'package:flutter_tools/src/base/platform.dart';
-import 'package:flutter_tools/src/cache.dart';
 import 'package:flutter_tools/src/commands/precache.dart';
-import 'package:flutter_tools/src/runner/flutter_command.dart';
-
-import '../elinux_cache.dart';

 class ELinuxPrecacheCommand extends PrecacheCommand {
   ELinuxPrecacheCommand({
@@ -17,55 +12,10 @@
     required super.platform,
     required super.logger,
     required super.featureFlags,
-  })  : _cache = cache,
-        _platform = platform {
+  }) {
     argParser.addFlag(
       'elinux',
       help: 'Precache artifacts for Embedded Linux development.',
     );
   }
-
-  final Cache _cache;
-  final Platform _platform;
-
-  bool get _includeOtherPlatforms =>
-      boolArg('android') ||
-      DevelopmentArtifact.values.any((DevelopmentArtifact artifact) =>
-          boolArg(artifact.name) && argResults!.wasParsed(artifact.name));
-
-  @override
-  Future<FlutterCommandResult> runCommand() async {
-    final bool includeAllPlatforms = boolArg('all-platforms');
-    final bool includeELinux = boolArg('elinux');
-    final bool includeDefaults = !includeELinux && !_includeOtherPlatforms;
-
-    const String elinuxStampName = 'elinux-sdk';
-
-    // Re-lock the cache.
-    if (_platform.environment['FLUTTER_ALREADY_LOCKED'] != 'true') {
-      await _cache.lock();
-    }
-
-    if (includeAllPlatforms || includeDefaults || includeELinux) {
-      if (boolArg('force')) {
-        _cache.setStampFor(elinuxStampName, '');
-      }
-      await _cache.updateAll(<DevelopmentArtifact>{
-        ELinuxDevelopmentArtifact.elinux,
-      });
-    }
-
-    if (includeAllPlatforms || includeDefaults || _includeOtherPlatforms) {
-      // If the '--force' option is used, the super.runCommand() will delete
-      // the elinux's stamp file. It should be restored.
-      final String? elinuxStamp = _cache.getStampFor(elinuxStampName);
-      final FlutterCommandResult result = await super.runCommand();
-      if (elinuxStamp != null) {
-        _cache.setStampFor(elinuxStampName, elinuxStamp);
-      }
-      return result;
-    }
-
-    return FlutterCommandResult.success();
-  }
 }
