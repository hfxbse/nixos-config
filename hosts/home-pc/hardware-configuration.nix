# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  modulesPath,
  ...
}:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [
    "xhci_pci"
    "ahci"
    "nvme"
    "usbhid"
    "usb_storage"
    "sd_mod"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  boot.loader.timeout = 0;

  # boot.plymouth.enable = true;
  # boot.initrd.systemd.enable = true;

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/bf5c7e40-af44-44dc-995f-0188d3b5b1b4";
    fsType = "btrfs";
    options = [ "subvol=@" ];
  };

  boot.initrd.luks.devices."luks-59789c93-fc96-4727-bcd0-a779a7aff0cc".device =
    "/dev/disk/by-uuid/59789c93-fc96-4727-bcd0-a779a7aff0cc";
  boot.initrd.luks.devices."luks-4e58cd4b-76ee-49a4-a86c-0ad7985e8a8b".device =
    "/dev/disk/by-uuid/4e58cd4b-76ee-49a4-a86c-0ad7985e8a8b";

  fileSystems."/boot/efi" = {
    device = "/dev/disk/by-uuid/C24D-0AD2";
    fsType = "vfat";
  };

  swapDevices = [
    { device = "/dev/disk/by-uuid/e1327672-f03e-47fb-8007-96cf293418e3"; }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp37s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp39s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
